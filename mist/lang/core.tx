Program:
  commands*=Command
;

Command:
  BuiltIn | PrintCommand | AbortCommand | SaveListCommand | SaveCommand | DataCommand | CheckCommand | 
  IterateCommand | WatchCommand | CommandDefinition | FunctionDefinition | SetCommand | ExposeCommand | 
  EndCommand | CommandCall | AppendCommand | FunctionCall
;

PrintCommand:
    'print' texts+=IDorSTRING[eolterm]
;

AbortCommand:
    'abort' (reason=STRING)?
;

DataCommand:
  'data' name=ID '{'
    params*=ID
  '}'
;

Param:
    key=ID '<=' value=IDorSTRING
;

AppendCommand:
  'append' target=ID '<=' value=IDorSTRING
;

CustomList:
  '['(components+=IDorSTRING[','])? ']'
;

NamedArg:
    key=ID '=' value=IDorSTRING
;

FunctionInlineCall:
  name=ID ('()' | '(' (namedArgs+=NamedArg | args+=IDorSTRING) ')')
;

IDorSTRING:
  function=FunctionInlineCall | customList=CustomList | data=/(?ms)\'{3}(.*?)\'{3}/ | (id=ID('.'childs+=ID['.'])?) | string=STRING | intVal=INT | ('%')?param=ID |
  ('$')?var=ID | (':')?source=ID
;

FunctionCall:
  name=ID ('()' | '(' (namedArgs+=NamedArg | args+=IDorSTRING) ')') ('=>' result=ID '{'
      commands*=Command
    '}' ('to' targets+=ID[eolterm])? )?
;

FunctionDefinition:
  'function' name=ID '(' args*=ID ')' '=>' result=ID '{'
    commands*=Command
  '}'
;

OutputId:
  source=ID ('(' fields+=ID ')' '=>' target=ID)?
;

SaveListCommand:
  'putlist' list=ID ('(' selectors+=ID ')')? sources*=IDorSTRING '=>' target=ID ('(' params*=ID ')')?
;

SaveCommand:
  'put' sources+=IDorSTRING '=>' target=ID ('(' params*=ID ')')?
;

WatchCommand:
  'watch' var=ID '=>' name=ID '{'
    commands*=Command
  '}'
;

CheckCommand:
  'check' var=IDorSTRING operator=CheckOperator result=IDorSTRING '{'
    commands+=Command
  '}' ('else' '{' elseCommands+=Command '}')?
;

CheckOperator:
  'is not' | 'is'
;

IterateCommand:
  'iterate' var=IDorSTRING '=>' name=ID '{'
    commands*=Command
  '}'
;

CommandDefinition:
  'command' command=ID ('(' params*=ID ')')? '{'
    commands*=Command
  '}'
;

SetCommand:
  'set' key=ID '<=' value=IDorSTRING
;

ExposeCommand:
  'expose' value=ID
;

EndCommand:
  'done'
;

CommandCall:
  'call' command=ID ('{'
    ('input' '{'
      params+=Param
    '}')?
    ('output' '{'
      outputs+=OutputId
    '}')?
    ('then' '{'
      commands*=Command
    '}')?
  '}')?
;

Comment:
  /#.*$/
;
