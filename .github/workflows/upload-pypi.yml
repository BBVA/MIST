name: Build Pypi Artifacts

on:
  create:
    tags:
      - v*

jobs:
  build-nix:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]

    steps:
      - uses: actions/checkout@v1  # v2 does not have submodules option now
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'

      - name: Build distribution package
        run: |
          python3 -m pip install setuptools wheel
          python setup.py bdist_wheel
          if [ ${{ matrix.os }} == "ubuntu-latest" ]; then python setup.py sdist; fi
      - name: Save Pypi artifacts
        uses: actions/upload-artifact@v2
        with:
          name: pypi
          path: dist/*

  build-windows:
    name: Build for Windows
    needs: build-nix
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v1  # v2 does not have submodules option now
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'

      - name: Build distribution package
        run: |
          python -m pip install setuptools wheel
          python setup.py bdist_wheel

      - name: Save Pypi artifacts
        uses: actions/upload-artifact@v2
        with:
          name: pypi
          path: dist/*

  deploy:
    name: Publish in Pypi
    needs: build-windows
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1  # v2 does not have submodules option now
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'

      - name: Recover Pypi artifacts
        uses: actions/download-artifact@v2
        with:
          name: pypi
          path: dist/

      - name: Listing artifacts
        run: ls dist/*

      - name: Publish Package Manager PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: ${{ secrets.pypi_user }}
          password: ${{ secrets.pypi_password }}
